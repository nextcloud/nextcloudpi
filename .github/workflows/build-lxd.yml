name: 'Build and test SD/VM images'
on:
  push:
    branches:
      - "feature/cicd/lxd-builds"

jobs:
  build-lxd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: whywaita/setup-lxd@v1
        with:
          lxd_version: latest/stable
      - name: Build LXD Image
        run: |
          ./build/build-LXD.sh
      - name: Setup Firefox
        uses: browser-actions/setup-firefox@latest
      - name: Setup GeckoDriver
        uses: browser-actions/setup-geckodriver@latest
      - name: Setup Selenium
        run: pip install selenium
      - name: Test LXD Image
        working-directory: ./tests
        run: |
          . ../build/buildlib.sh
          lxc delete -f ncp
          systemd-run --user --scope -p "Delegate=yes" lxc launch "ncp/${version}" ncp
          lxc exec ncp -- bash -c 'while [ "$(systemctl is-system-running 2>/dev/null)" != "running" ] && [ "$(systemctl is-system-running 2>/dev/null)" != "degraded" ]; do :; done'
          sleep 30
          ip="$(lxc list -c n4 -f csv | grep '^ncp' | cut -d ',' -f2)"
          ip="${ip/% *}"
          python activation_tests.py --no-gui "$ip" 443 4443 || {
            tail -n 20 geckodriver.log >&2 || true
            echo "Activation test failed!"
            exit 1
          }
          python system_tests.py --non-interactive || {
            echo "System test failed!"
            exit 1
          }
          python nextcloud_tests.py --no-gui "$ip" 443 4443 || {
            echo "Nextcloud test failed!"
            exit 1
          }
          lxc stop ncp
      - name: Publish LXD Image
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        run: |
          # TODO




  build-rpi:
    runs-on: ubuntu-latest
    env:
      HCLOUD_TOKEN: "${{ secrets.TEST_AUTOMATION_HCLOUD_API_TOKEN }}"
      UID: "${{ github.run_id }}-rpi"
      VERSION: "${{ github.event.inputs.version || github.head_ref || github.ref_name }}"
    defaults:
      run:
        shell: bash
    steps:
      - uses: 3bit/setup-hcloud@v1
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build RPI SD Image
        run: |
          set -e
          echo "Setup ssh"
          mkdir -p ~/.ssh
          ssh-keygen -t ed25519 -f ".ssh/automation_ssh_key" -N ""
          chmod 0600 ~/.ssh/automation_ssh_key
          eval "$(ssh-agent)"
          ssh-add ~/.ssh/automation_ssh_key
          hcloud ssh-key create --name "rpi-build-{{ $github.run_id }}"" --public-key-from-file "~/.ssh/automation_ssh_key.pub"
          hcloud server create --image debian-11 --name ncp-builder --type cx11 --ssh-key "rpi-build-{{ $github.run_id }}"
          for i in {1..5}
          do
            hcloud server ssh "ncp-builder-rpi-{{ $github.run_id }}" bash -c "echo Server is online" 2> /dev/null && break;
            [[ $i -eq 5 ]] && {
              echo "Failed to connect to hcloud server (timeout reached)!"
              exit 1
            }
            sleep 5
          done
          hcloud server ssh bash -c <<EOF
          apt update && apt install -y git zip unzip parted binfmt-support qemu-user-static
          git clone https://github.com/nextcloud/nextcloudpi.git
          cd nextcloudpi
          git checkout "${{ env.VERSION }}"
          ./build/build-SD-rpi.sh
          EOF


      - name: Publish RPI Image
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        run: |
          # TODO



